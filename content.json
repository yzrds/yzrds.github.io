{"meta":{"title":"梁友泽的博客","subtitle":null,"description":null,"author":"梁友泽","url":"http://www.liangyouze.com"},"pages":[{"title":"","date":"2018-10-07T13:45:35.616Z","updated":"2018-10-07T13:45:35.616Z","comments":true,"path":"about/index.html","permalink":"http://www.liangyouze.com/about/index.html","excerpt":"","text":"梁友泽个人信息 梁友泽 籍贯 重庆 本科/通信工程 2014-2018 Github https://github.com/yzrds 技术博客 https://www.liangyouze.com wechat: lyz19951024 email: youzedev@gmail.com 工作年限 1年 技术方向 后端(未来想从事搜索方向) 工作经历新加坡艾克伦 (2018.03-至今)项目描述: AculearnOnline是一款针对于中小学在线教育平台。系统采用了微服务架构，工作描述: 新加坡艾克伦是一家外企，公司主要对外输出在线教育，视频会议录播，云会议服务等。个人职责:负责开发AculearnOnline在线教育产品，管理后台、以及日常业务开发。 主要技术: groovy,elasticsearch,mongodb,redis，kafka等互联网主流技术 职责描述: 参与整个在线教育平台从0到1的构建，微服务领域的划分。 负责整个支付系统设计与开发，并与业务子系统集成。 负责评价，kafka异步统计。部分单点登录与部分搜索。以及相关的订单模块。 整个管理后台的开发。 重庆春之翼信息科技有限公司 (2017.09-2018.01)合同管理系统 项目描述: 合同管理项目为上海春秋航空总部提供了从线下合同到线上合同管理的便捷服务。与ERP系统，人事管理系统集成。实现了可配置，，支持合同信息查询、合同审批、合同预算管控等功能，实现合同信息从线下管理到线上管理的初步功能。 主要技术:c#,bootstrap,oracle,jquery 工作描述:负责内部合同管理模块的研发实现工作，包括合同信息查询、合同审批、合同预算管控、文件上传、合同提示信息推送等功能，实现合同信息从线下管理到线上管理的初步功能。 技能清单 编程语言: java groovy 框架: SpringBoot/mybatis 存储: mysql/redis/mongo 中间件: kafka/elasticsearch 自我评价 早已习惯各种英文工作环境，能够较为熟练阅读各类技术的官方文档 有较强的学习能力和良好的学习习惯 数学爱好者，在校期间自学各类数学知识，并获得大学生数学建模竞赛省二等奖，网络挑战赛优秀奖。能把数学当小说看，但不扣细节。 热爱阅读，有长期维护的个人博客和微信公众号，喜欢交流与技术分享 为人踏实，具有较强的团队意识和协作能力"},{"title":"","date":"2018-08-27T15:15:37.085Z","updated":"2018-08-27T15:15:37.085Z","comments":true,"path":"archives/index.html","permalink":"http://www.liangyouze.com/archives/index.html","excerpt":"","text":"ceshi"},{"title":"categories","date":"2018-08-28T13:38:07.000Z","updated":"2018-08-28T13:38:07.748Z","comments":true,"path":"categories/index.html","permalink":"http://www.liangyouze.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"分布式架构","date":"2018-10-05T14:09:08.335Z","updated":"2018-10-05T14:08:51.734Z","comments":true,"path":"2018/10/05/分布式架构/","link":"","permalink":"http://www.liangyouze.com/2018/10/05/分布式架构/","excerpt":"","text":"分布式架构 在应用的迭代过程中，随着一些系统访问量高，用户数增多。业务复杂度提高，代码复杂度提高。应用逐渐从单体式架构面向服务的分布式架构转变。于是，RPC远程过程调用是分布式的核心。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-08-24T16:29:18.959Z","updated":"2018-08-24T16:29:18.959Z","comments":true,"path":"2018/08/25/hello-world/","link":"","permalink":"http://www.liangyouze.com/2018/08/25/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"关于iframe跨域传输","slug":"关于iframe跨域传输","date":"2018-07-31T12:10:33.000Z","updated":"2018-09-02T15:06:08.114Z","comments":true,"path":"2018/07/31/关于iframe跨域传输/","link":"","permalink":"http://www.liangyouze.com/2018/07/31/关于iframe跨域传输/","excerpt":"","text":"至于我为什么想写这篇文章是因为最近在项目中使用到了iframe，是的。生无可恋的又写上了一点js，可能是因为前端的人对单点登录啥的或者是页面跳转以及要和后端的逻辑处理起来不是很熟练吧。各大网站，包括淘宝，京东，这些大网站有很多自己的产品，至于前期是怎么样的不是很清楚，网易云至少是用的iframe。参考了一些博客，至于使用不使用iframe，我觉得能解决问题就好，而且如果考虑的多的话就考虑以后扩展以及拆分啥的，毕竟前端又不像后端这样。 因为要解决跨域问题。有很多方案，比如说iframe，jsonp(不过只支持get，对于一些铭感信息就不行了) 原本需求是登录在一个站点，而注册是另外一个站点。因为要实时反馈到iframe子页面，子页面在进行相应。 而在Windows对象下有个postMessage方法，是解决跨越问题的假设有两个不同源的页面，iframe.html和index.html 其中前者是后者的子页面。123456789&lt;!-- index.html --&gt;&lt;body&gt; &lt;h1&gt;this is index&lt;/h1&gt; &lt;iframe src=\"./iframePage.html\" id='iframe'&gt;&lt;/iframe&gt;&lt;/body&gt; 1234567&lt;!-- iframePage --&gt;&lt;body&gt; &lt;h1&gt;this is iframePage&lt;/h1&gt;&lt;/body&gt; 现在这两个是无法通信的，因为是不同的站点，所以这个时候就要用到postMessage 123456789101112// idnex.html//获取iframe元素,当然也可以使用其他的js框架iFrame = document.getElementById('iframe')//iframe加载完毕后再发送消息，否则子页面接收不到messageiFrame.onload = function()&#123; //iframe加载完立即发送一条消息 iFrame.contentWindow.postMessage('MessageFromIndex1','*');&#125; 我们知道postMessage是挂载在window对象上的，所以等iframe加载完毕后，用iFrame.contentWindow获取到iframe的window对象，然后调用postMessage方法，相当于给子页面发送了一条消息。 postMessage方法第二个参数可以设置要发送到哪个url，如果当前子页面的url和设置的不一致，则会发送失败，因为没啥限制就设置为*，代表所有url都允许发送。 消息发送到iframePage.html，我们来接收message 123456789// iframePage.html//回调函数function receiveMessageFromIndex ( event ) &#123; console.log( 'receiveMessageFromIndex', event )&#125;//监听message事件window.addEventListener(\"message\", receiveMessageFromIndex, false); 然后设置好回调函数，就可以了，data中或许还有其他的数值，所以在接受的时候判断一下。","categories":[],"tags":[{"name":"跨域","slug":"跨域","permalink":"http://www.liangyouze.com/tags/跨域/"},{"name":"iframe","slug":"iframe","permalink":"http://www.liangyouze.com/tags/iframe/"}]},{"title":"w","slug":"w","date":"2018-05-24T16:51:18.000Z","updated":"2018-08-26T06:11:17.525Z","comments":true,"path":"2018/05/25/w/","link":"","permalink":"http://www.liangyouze.com/2018/05/25/w/","excerpt":"","text":"","categories":[],"tags":[]}]}